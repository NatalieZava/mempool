name: CI Pipeline for the Frontend

on:
  pull_request:
    types: [opened, review_requested, synchronize]

jobs:
  frontend:
    if: "!contains(github.event.pull_request.labels.*.name, 'ops') && !contains(github.head_ref, 'ops/')"
    strategy:
      matrix:
        node: ["16.16.0", "18.14.1"]
        flavor: ["dev", "prod"]
      fail-fast: false
    runs-on: "ubuntu-latest"

    name: Frontend (${{ matrix.flavor }}) - node ${{ matrix.node }}
    steps:
      - name: Initialize Energy Estimation
        uses: green-coding-berlin/eco-ci-energy-estimation@v1
        with:
          task: start-measurement

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ${{ matrix.node }}/${{ matrix.flavor }}

      - name: Checkout Repo Measurement
        uses: green-coding-berlin/eco-ci-energy-estimation@v1
        with:
            task: get-measurement
            label: 'repo checkout'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          registry-url: "https://registry.npmjs.org"

      - name: Install (Prod dependencies only)
        run: npm ci --omit=dev --omit=optional
        if: ${{ matrix.flavor == 'prod'}}
        working-directory: ${{ matrix.node }}/${{ matrix.flavor }}/frontend

      - name: Install
        if: ${{ matrix.flavor == 'dev'}}
        run: npm ci
        working-directory: ${{ matrix.node }}/${{ matrix.flavor }}/frontend

      - name: Lint
        if: ${{ matrix.flavor == 'dev'}}
        run: npm run lint
        working-directory: ${{ matrix.node }}/${{ matrix.flavor }}/frontend

      # - name: Test
      #   run: npm run test

      - name: Build
        run: npm run build
        working-directory: ${{ matrix.node }}/${{ matrix.flavor }}/frontend
        
      - name: Tests measurement
        uses: green-coding-berlin/eco-ci-energy-estimation@v1
        with:
          task: get-measurement
          label: 'pytest'

      - name: Show Energy Results
        uses: green-coding-berlin/eco-ci-energy-estimation@v1
        with:
          task: display-results
